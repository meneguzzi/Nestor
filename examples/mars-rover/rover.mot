Motivation navigate {
	Threshold = 10;
	IntensityUpdate org.kcl.nestor.mot.impl.IntensityUpdateFunctionImpl {
//		battery(Batt)
//		& at(X,Y)
//		& waypoint(Wx,Wy) 
//		& rover.act.distance(X,Y,Wx,Wy,Dist)
//		& Dist < Batt -> Dist;
		waypoint(X,Y) -> 10;
	}
	
	GoalGeneration org.kcl.nestor.mot.impl.GoalGenerationFunctionImpl {
		waypoint(X,Y) -> +!goToWaypoint(waypoint(X,Y));
		at(X,Y) & waypoint(X,Y) -> -waypoint(X,Y); // to avoid adopting an already achieved goal
	}
	
	Mitigation org.kcl.nestor.mot.impl.MitigationFunctionImpl {
		at(X,Y) & waypoint(X,Y) -> -1000;
	}
}

Motivation keepBattery {
	Threshold = 10;
	
	IntensityUpdate org.kcl.nestor.mot.impl.IntensityUpdateFunctionImpl {
		//Will need something like
		at(X,Y) & chargeStation(Cx,Cy) 
		& rover.act.distance(X,Y,Cx,Cy,Dist) 
		& battery(Batt)
		& (Dist >= Batt) -> 1;
	}
	
	GoalGeneration org.kcl.nestor.mot.impl.GoalGenerationFunctionImpl {
		true -> +!recharge;
	}
	
	Mitigation org.kcl.nestor.mot.impl.MitigationFunctionImpl {
		battery(40) -> -10;
	}
}